import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error
import zipfile
car_data=pd.read_csv("/content/car_data[1].csv")
x = car_data[['Driven_kms','Car_Name']]
y = car_data['Selling_Price']
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=54)
combined_data = pd.concat([x_train, x_test])
x_encoded = pd.get_dummies(combined_data, columns=['Car_Name'])
x_train_encoded = x_encoded[:len(x_train)]
x_test_encoded = x_encoded[len(x_train):]
model = LinearRegression()
model.fit(x_train_encoded, y_train)
predictions = model.predict(x_test_encoded)
mae = mean_absolute_error(y_test, predictions)
print(f'Mean Absolute Error: {mae}')
new_listing = [['60000','500']]
new_listing_encoded = pd.get_dummies(pd.DataFrame(new_listing, columns=['Driven_kms', 'Car_Name']), columns=['Car_Name'])
new_listing_encoded = new_listing_encoded.reindex(columns=x_train_encoded.columns,fill_value=0)
predicted_price = model.predict(new_listing_encoded)
print(f'predicted price for the new listing:${predicted_price[0]}')


